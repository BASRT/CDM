@model ConcremoteDeviceManagment.Models.Pricelist

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Pricelist</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
   
    <div class="form-group">
        @Html.Label("CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("SubCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SubCategoryId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Prijs", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Leverancier Artikelnummer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.art_lev_nr, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.art_lev_nr, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Leverancier", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*     @Html.EditorFor(model => model.Leverancier, new { htmlAttributes = new { @class = "form-control" } })*@
            @*     @Html.DropDownList("SelectedLeverancier", null, new { @class = "form-control" })*@
            @Html.DropDownListFor(m => m.Leverancier, (IEnumerable<SelectListItem>)ViewBag.SelectedLeverancier, "Selecteer een Leverancier", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Leverancier, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("BAS Artikelnummmer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bas_art_nr, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bas_art_nr, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Beschrijving", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Actief", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Active)
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
