@model List<ConcremoteDeviceManagment.Models.Device_Pricelist>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@
@using (Html.BeginForm("GetDevice", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div>
        <a href="#" id="addNew">Add New</a>
    </div>
    <table class="table table-hover" id="dataTable">
        <tr>
            <th class="table-row">
                @Html.DisplayName("BAS artikelnummer")
            </th>
            <th class="table-row">
                @Html.DisplayName("Beschrijving")
            </th>
            <th class="table-row">
                @Html.DisplayName("Aantal")
            </th>
            <th class="table-row">
                @Html.DisplayName("Bouw Volgorde")
            </th>
            <th class="table-row"></th>
        </tr>
       @if (Model != null && Model.Count > 0)
            {
                int j = 0;
                foreach (var i in Model)
                {
        <tr>
            @Html.HiddenFor(a => a[j].id)
            <td class="table-row">
                @Html.DisplayFor(a => a[j].DeviceConfig.Device_config_id)
            </td>

            <td class="table-row">
                @Html.EditorFor(a => a[j].Price_id, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td class="table-row">
                @Html.DisplayFor(a => a[j].Pricelist.description.FirstOrDefault(rt => rt.Price_id == a[j].Pricelist.description))
                @Html.DisplayFor(a => a[j].Pricelist.description, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td class="table-row">
                @Html.EditorFor(a => a[j].amount, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td class="table-row">
                @Html.EditorFor(a => a[j].assembly_order, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td class="table-row">
                @Html.DisplayFor(a => a[j].DeviceConfig.Active, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td class="table-row">
                @Html.DisplayFor(a => a[j].DeviceConfig.Date, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td>
                @if (j > 0)
        {
            <a href="#" class="remove">Remove</a>
}
            </td>
        </tr>
                j++;
            }
        }
    </table>
    @*<input type="submit" value="Save Device Data" class="btn btn-primary" />*@

}

@section Scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script language="javascript">

        $(document).ready(function () {

            //1. Add new row
            $("#addNew").click(function (e) {
                e.preventDefault();

                var $tableBody = $("#dataTable");

                var $trLast = $tableBody.find("tr:last");
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                $trNew.find("td:last").html('<a href="#" class="remove">Remove</a>');
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);
                    //Replaced value
                    var type = $(this).attr('type');
                    if (type.toLowerCase() == "text") {
                        $(this).attr('value', '');
                    }

                    // If you have another Type then replace with default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);

                // Re-assign Validation
                var form = $("form")
                    .removeData("validator")
                    .removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse(form);
            });

            // 2. Remove
            //$('a.remove').live("click", function (e) {   --> this is for old jquery library
            $('body').on("click", 'a.remove', function (e) {
                e.preventDefault();
                $(this).parent().parent().remove();
            });

        });
    </script>
}